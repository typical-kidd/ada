#include <stdio.h>

#define MAX_ITEMS 10

int weights[MAX_ITEMS], profits[MAX_ITEMS], n; 

int max(int a, int b) 
{
    return (a > b) ? a : b; 
}

// Recursive function to solve the knapsack problem
int knap(int i, int m) 
{
    if (i == n) 
        return 0; 
    if (weights[i] > m) 
        return knap(i + 1, m); 
    return max(knap(i + 1, m), knap(i + 1, m - weights[i]) + profits[i]); 
}

int main() 
{
    int capacity, i, max_profit; 

    printf("Enter the number of objects: ");
    scanf("%d", &n); 

    printf("Enter the knapsack capacity: ");
    scanf("%d", &capacity); 

    printf("Enter profit followed by weight for each object:\n"); 
    for (i = 0; i < n; i++) 
    {
        printf("Object %d: ", i + 1);
        scanf("%d %d", &profits[i], &weights[i]); 
    }

    max_profit = knap(0, capacity); 
    printf("Max profit = %d\n", max_profit); 

    return 0; 
}
