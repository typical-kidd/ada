#include <stdio.h>
#include <stdlib.h>

#define MAX 10

int temp[MAX], k = 0;

void sort(int a[MAX][MAX], int id[MAX], int n) 
{
    int i, j;
    for (i = 0; i < n; i++) 
    {
        if (id[i] == 0) 
        {
            id[i] = -1;
            temp[k++] = i;
            for (j = 0; j < n; j++) 
            {
                if (a[i][j] == 1 && id[j] != -1) 
                {
                    id[j]--;
                }
            }
            i = -1; // Restart the loop
        }
    }
}

int main() 
{
    int a[MAX][MAX], id[MAX], n, i, j;
    printf("Enter the number of vertices (n): ");
    scanf("%d", &n);

    if (n > MAX) 
    {
        printf("Number of vertices exceeds the maximum limit of %d.\n", MAX);
        return 1;
    }

    for (i = 0; i < n; i++) 
    {
        id[i] = 0;
    }

    printf("Enter the graph data (adjacency matrix):\n");
    for (i = 0; i < n; i++) 
    {
        for (j = 0; j < n; j++) 
        {
            scanf("%d", &a[i][j]);
            if (a[i][j] == 1) 
            {
                id[j]++;
            }
        }
    }

    sort(a, id, n);

    if (k != n) 
    {
        printf("Topological ordering not possible\n");
    } 
    else 
    {
        printf("Topological ordering is:\n");
        for (i = 0; i < k; i++) 
        {
            printf("%d ", temp[i] + 1); // Adding 1 to convert from 0-based to 1-based index
        }
        printf("\n");
    }

    return 0;
}
