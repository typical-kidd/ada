#include <stdio.h>
#define MAX 10

int s[MAX], x[MAX], d;

void sumofsub(int p, int k, int r) 
{
    int i;
    
    // Include s[k] in the subset
    x[k] = 1; 
    
    // Check if the current subset sum equals the desired sum
    if ((p + s[k]) == d) 
    {
        for (i = 1; i <= k; i++) 
        {
            if (x[i] == 1) 
                printf("%d ", s[i]); 
        }
        printf("\n"); 
    } 
    else if (p + s[k] + s[k + 1] <= d) 
    {
        // Recur with including s[k] in the subset
        sumofsub(p + s[k], k + 1, r - s[k]); 
    } 
    
    // Check if excluding s[k] from the subset can still meet the target sum
    if ((p + r - s[k] >= d) && (p + s[k + 1] <= d)) 
    {
        x[k] = 0; 
        // Recur with excluding s[k] from the subset
        sumofsub(p, k + 1, r - s[k]); 
    }
}

int main() 
{
    int i, n, sum = 0; 
    
    printf("Enter the number of elements: ");
    scanf("%d", &n); 
    
    printf("Enter the set in increasing order:\n"); 
    for (i = 1; i <= n; i++) 
        scanf("%d", &s[i]); 
    
    printf("Enter the desired subset sum value: "); 
    scanf("%d", &d); 
    
    for (i = 1; i <= n; i++) 
        sum += s[i]; 
    
    // Check if it's possible to find a subset that sums up to d
    if (sum < d || s[1] > d) 
    {
        printf("No subset possible\n"); 
    } 
    else 
    {
        sumofsub(0, 1, sum); 
    }
    
    return 0; 
}
